openapi: 3.0.0
servers:
  - url: 'https://api.qred.com/loans/v1'
    description: Live Server
  - url: 'https://sandbox.qred.com/loans/v1'
    description: Sandbox Server
info:
  description: |
    Qred Connect - API Documentation
    ## Introduction
    Qred's Partner API "Qred Connect" allows our partners to directly connect to Qred's services. As a partner you may submit an application and request instant approval for a business loan. Our API allows our partners to integrate Qred's business loan application in a seamless and effortless way.
    ### Technical Specifications
    Notice that for Qred Connect:

      * Qred's APIs are built according to industry standard practices for third-party RESTful web services
      * Strong validation, authentication & encryption
      * Entry points for requests are sent via HTTP over SSL (all information is encrypted)

    ### How to get started
    There are two environments - Test and Production.

      * Sandbox: https://sandbox.qred.com
      * Production: https://api.qred.com

    ## Contact
    To get in touch with Qred either send us an email at <partner@qred.com> or call us at [+46 8 474 46 62](tel:4684744662)
    ## Terms of Service
    The terms of service will be clarified once you have a partner agreement with Qred.
  version: 0.5.0
  title: Qred Connect
  termsOfService: '#section/Terms-of-Service'
  contact:
    email: techsupport@qred.com
    url: '#section/Contact'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://static.qred.com/sv-se/bilder/qred-logo-white-desktop.png'
tags:
  - name: applications
    description: Create loan applications on behalf of your customers
paths:
  /applications:
    post:
      tags:
        - applications
      summary: Add loan application
      operationId: add
      description: |-
        Send a loan application to Qred. 
        ### Full application request
        You can also send in further fields to simplify the qualification of the of the customer application.
        The default is the reduced request. By adding `$type:"full"` you can send in further information.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ApplicationRequest'
                - $ref: '#/components/schemas/FullApplicationRequest'
              discriminator:
                propertyName: $type
                mapping:
                  simple: '#/components/schemas/ApplicationRequest'
                  full: '#/components/schemas/FullApplicationRequest'
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreateResponse'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
      security:
        - JWT: []
      x-code-samples:
        - lang: 'C#'
          source: "/**\r\ncreate a new .net project:\r\n\r\n```\r\ndotnet new console -o ./\r\n```\r\n\r\nadd Identity Model package:\r\n\r\n``` \r\ndotnet add package IdentityModel \r\ndotnet add package Qred.Connect\r\n```\r\n\r\nYou should end up with something like:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"IdentityModel\" Version=\"3.10.4\" />\r\n    <PackageReference Include=\"Qred.Connect\" Version=\"0.2.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n*/\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Net.Http;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing IdentityModel.Client;\r\nusing Newtonsoft.Json;\r\nusing Newtonsoft.Json.Serialization;\r\nusing Qred.Connect;\r\n\r\nnamespace AwesomeBusinessApp\r\n{\r\n  public class Program\r\n  {\r\n    public static void Main(string[] args) => MainAsync().GetAwaiter().GetResult();\r\n\r\n    private static async Task MainAsync()\r\n    {\r\n      // discover endpoints from metadata\r\n      var disco = await new DiscoveryClient(\"https://identity.qred.com\").GetAsync();\r\n      if (disco.IsError)\r\n      {\r\n        Console.Error.WriteLine(\"Error {0}\", disco.Error);\r\n        Console.Error.WriteLine(\"ErrorType {0}\", disco.ErrorType);\r\n        Console.Error.WriteLine(String.Join(\", \",\r\n            \"Exception\",\r\n            \"Message \" + disco.Exception?.Message,\r\n            \"Source \" + disco.Exception?.Source,\r\n            \"StackTrace \" + disco.Exception?.StackTrace));\r\n        return;\r\n      }\r\n\r\n      // request token\r\n      var tokenClient = new TokenClient(disco.TokenEndpoint, \"YOUR CLIENT ID\", \"YOUR API KEY\");\r\n      var tokenResponse = await tokenClient.RequestClientCredentialsAsync(\"connect\");\r\n\r\n      if (tokenResponse.IsError)\r\n      {\r\n        Console.WriteLine(tokenResponse.Error);\r\n        return;\r\n      }\r\n\r\n      Console.WriteLine(tokenResponse.Json);\r\n      Console.WriteLine(\"\\n\\n\");\r\n\r\n      // call api\r\n      var client = new HttpClient();\r\n      client.SetBearerToken(tokenResponse.AccessToken);\r\n      var payload = new ApplicationRequest\r\n      {\r\n        Amount = 5000,\r\n        Organization = new SimpleOrganization { \r\n          Email = \"admin@a-company.com\", \r\n          NationalOrganizationNumber = \"2344473928\" \r\n        },\r\n        Applicant = new SimpleApplicant { \r\n          Email = \"joe.smith@a-company.com\", \r\n          Phone = \"+4688675309\"\r\n        }\r\n      };\r\n      Console.WriteLine(payload.ToJson());\r\n      var response = await client.PostAsync(\"https://api.qred.com/loans/v1/applications\", new StringContent(payload.ToJson(), Encoding.UTF8, \"application/json\"));\r\n      if (!response.IsSuccessStatusCode)\r\n      {\r\n        Console.WriteLine(response.StatusCode);\r\n        var content = await response.Content.ReadAsStringAsync();\r\n        Console.WriteLine(content);\r\n      }\r\n      else\r\n      {\r\n        var content = await response.Content.ReadAsStringAsync();\r\n        var applicationResponse = JsonConvert.DeserializeObject<ApplicationCreateResponse>(content);\r\n        Console.WriteLine(applicationResponse);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"
  '/applications/{applicationId}':
    get:
      summary: Status of loan application
      operationId: get
      description: Get summary information about loan application from Qred
      tags:
        - applications
      parameters:
        - name: applicationId
          in: path
          description: The id of the application
          required: true
          schema:
            type: string
            pattern: ' ap_[^/]+'
      responses:
        '200':
          description: Found application with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDecisionManualProcess'
        '210':
          description: Found application with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDecisionApproved'
        '211':
          description: Found application with id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDecisionRejected'
        '404':
          description: Application not found
      security:
        - JWT: []
components:
  schemas:
    AdditionalName:
      type: string
      example: Daniels
      description: 'An additional name for a Person, can be used for a middle name.'
    Amount:
      type: number
      example: 15000
      description: |-
        ### Amount
        The amount in local currency that the company wants to borrow. 
        ### Abbreviation
        Expected to be the full amount, i.e. 1 000 implies 1 thousand in the local currency.
        ### Currency code of amount?
        Note that the currency is specified when issued API key.
    ApplicationCreateResponse:
      properties:
        id:
          type: string
          example: ap_0462a90c-fd56-4820-b8d4-28f252629c2c
          description: The application id
        url:
          type: string
          format: uri
          example: 'https://api.qred.com/loans/v1/applications/ap_0462a90c-fd56-4820-b8d4-28f252629c2c'
          description: URL to the resource created by your POST request
        userPage:
          type: string
          format: uri
          example: 'https://qred.com/en/partner-application-page?partner=partner&someid=0462a90cfd564820b8d428f252629c2c'
          description: URL that you can direct the applicant in order for the applicant to be able to potentially fill in more information
    ApplicationDecision:
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/ApplicationDecisionType'
    ApplicationDecisionApproved:
      allOf:
        - $ref: '#/components/schemas/ApplicationDecision'
        - type: object
          properties:
            amount:
              type: number
            term:
              type: number
            campaign:
              type: string
      example:
        status: Approved
        amount: 5000
        term: 12
        campaign: Spring Campaign
    ApplicationDecisionManualProcess:
      allOf:
        - $ref: '#/components/schemas/ApplicationDecision'
      example:
        status: ManualProcess
    ApplicationDecisionRejected:
      allOf:
        - $ref: '#/components/schemas/ApplicationDecision'
        - type: object
          properties:
            rejectReason:
              type: string
      example:
        status: Denied
        rejectReason: Due to previous problems with payments we regret that we have to reject the application.
    ApplicationDecisionType:
      type: string
      example: Approved
      enum:
        - Approved
        - Rejected
        - Expired
        - Waiting
        - Cancelled
        - Application Registered
    ApplicationErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationErrorResponseItem'
      example:
        errors:
          - property: amount
            description: Amount is a required field
            code: NotNull
          - property: organization.organizationId
            description: organizationId is a required field
            code: NotNull
          - property: applicant.email
            description: email is a required field
            code: NotNull
    ApplicationErrorResponseItem:
      properties:
        property:
          type: string
          example: amount
        description:
          type: string
          example: Amount is a required field
        code:
          type: string
          enum:
            - Min
            - Max
            - PhoneNumber
            - NationalIdentificationNumber
            - NotNull
            - NotEmpty
            - Email
            - Url
            - CantUpdateApplication
            - General
          description: |
            A constant that can be used in order to identify the error programmatically. Can be used when translating.
            Short description:
              * `Min` - Failed validation due to value being below the minimum required value
              * `Max` - Failed validation due to value being above the maximum required value
              * `PhoneNumber` - Failed validation due to value not being a valid phone number
              * `NationalIdentificationNumber` - Failed validation due to value not being a valid national identification for your country
              * `NotNull` - Failed validation due to value being null, when a non null value is required
              * `NotEmpty` - Failed validation due to value being empty while a non empty string is required
              * `Email` - Failed validation due to value not being an email
              * `Url` - Failed validation due to value not being URL
              * `CantUpdateApplication` - Failed to update application due to state of application
              * `General` - General code.
    ApplicationPoliticallyExposedPerson:
      properties:
        nationalIdentificationNumber:
          $ref: '#/components/schemas/NationalIdentificationNumber'
        givenName:
          $ref: '#/components/schemas/GivenName'
        additionalName:
          $ref: '#/components/schemas/AdditionalName'
        familyName:
          $ref: '#/components/schemas/FamilyName'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        placeOfBirth:
          $ref: '#/components/schemas/PlaceOfBirth'
        description:
          type: string
          example: Member of the parliament
          description: How is the person politically exposed.
    ApplicationRequest:
      required:
        - amount
        - organization
        - applicant
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        promoCode:
          $ref: '#/components/schemas/PromoCode'
        term:
          $ref: '#/components/schemas/LoanTerm'
        purposeOfLoan:
          $ref: '#/components/schemas/PurposeOfLoan'
        organization:
          $ref: '#/components/schemas/SimpleOrganization'
        applicant:
          $ref: '#/components/schemas/SimpleApplicant'
        files:
          $ref: '#/components/schemas/Base64Files'
        $type:
          type: string
          example: simple
          description: Note that `$type` must be `full` in order to send in further information.
    Base64File:
      required:
        - filename
        - base64Content
      properties:
        encodingFormat:
          type: array
          items:
            type: string
          example:
            - application/xml
            - https//api.a-company.com/transactions/v1
          description: |-
            Media type typically expressed using a MIME format (see [IANA](http://www.iana.org/assignments/media-types/media-types.xhtml) site and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).
            Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. In the case of organization specific file format with a specific purpose that could be a url to schema definition. For instance, transaction data format defined by `a-company` (see the example) that may or may not be hosted at that url.
        filename:
          type: string
          example: company-specific-format.xml
        base64Content:
          type: string
          format: byte
          example: U3dhZ2dlciByb2Nrcw==
          description: Base64 encoded binary content.
    Base64Files:
      type: array
      items:
        $ref: '#/components/schemas/Base64File'
      description: 'Here you can supply additional files such as images, pdfs or company specify formats in order to get a faster qualification for your customer.'
    CurrentMonthlyTurnover:
      type: object
      example: 100000
      description: |-
        ### Short
        Turnover for last month in national currency. 
        ### Abbreviation
        Expected to be the full amount, i.e. 1 000 implies 1 thousand in the local currency.
        ### Other formats
        You can also send in the turnover as a range. Say that you know that the turnover is in the span  50 000-100 000, then you can serialize that value as  `[50000,100000]`.
        If you know that the turnover is above a certain value, say 1 000 000, then that can be serialized as `[1000000,null]`
        ### Turnover currency code?
        Note that the currency is specified when issued API key.
    DateOfBirth:
      type: string
      example: '19701201'
      description: When the person was born. Expected format is `YYYYMMDD`
    FamilyName:
      type: string
      example: Smith
      description: 'Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.'
    FullApplicant:
      allOf:
        - $ref: '#/components/schemas/SimpleApplicant'
        - type: object
          required:
            - $type
          properties:
            politicallyExposedPerson:
              $ref: '#/components/schemas/PoliticallyExposedPerson'
            dateOfBirth:
              $ref: '#/components/schemas/DateOfBirth'
            placeOfBirth:
              $ref: '#/components/schemas/PlaceOfBirth'
            $type:
              type: string
              example: full
              description: Note that `$type` must be `full` in order to send in further information.
    FullApplicationRequest:
      required:
        - amount
        - organization
        - applicant
        - $type
      allOf:
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
            promoCode:
              $ref: '#/components/schemas/PromoCode'
            term:
              $ref: '#/components/schemas/LoanTerm'
            purposeOfLoan:
              $ref: '#/components/schemas/PurposeOfLoan'
            organization:
              $ref: '#/components/schemas/FullOrganization'
            applicant:
              $ref: '#/components/schemas/FullApplicant'
            files:
              $ref: '#/components/schemas/Base64Files'
            politicallyExposedPersons:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationPoliticallyExposedPerson'
            $type:
              type: string
              example: full
              description: Note that `$type` must be `full` in order to send in further information.
    FullOrganization:
      allOf:
        - $ref: '#/components/schemas/SimpleOrganization'
        - type: object
          required:
            - $type
          properties:
            numberOfEmployees:
              $ref: '#/components/schemas/NumberOfEmployees'
            owners:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationOwner'
            iban:
              type: string
              example: DE89 3704 0044 0532 0130 00
              description: |
                International Bank Account Number. The company bank account for receiving out payment. 
            $type:
              type: string
              example: full
              description: Note that `$type` must be `full` in order to send in further information.
    GivenName:
      type: string
      example: Joe
      description: 'Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.'
    LoanTerm:
      type: number
      example: 12
      description: Loan term number of months
    NationalIdentificationNumber:
      type: string
      example: '197012012344'
      description: |
        ### Short
        The Tax / Fiscal ID of the person, e.g. the TIN in the US, CIF/NIF in Spain, [CPR](https://international.kk.dk/artikel/how-do-i-get-cpr-number) in Denmark, [Personal Identity Code](https://vrk.fi/en/personal-identity-code1) in Finland, or [personal number](https://skatteverket.se/privat/folkbokforing/personnummerochsamordningsnummer.4.3810a01c150939e893f18c29.html) in Sweden. 
        ### In the EU
        Some EU countries have a TIN. Some EU countries do not have a unique identification number. In that case the identification number will be some other type of information that can help identify the person.  
        The European commission has further information about [TIN](https://ec.europa.eu/taxation_customs/business/tax-cooperation-control/administrative-cooperation/tax-identification-numbers-tin_en).
    NumberOfEmployees:
      type: object
      example: 10
      description: |-
        ### Short
        Number of full time employees.  
        ### Other formats
        You can also send in the number of employees as a range.  For instance if the company has between 1 and 10 employees, then that can be serialized as  `[1,10]`.
        If you know that the number of employees is greater than a certain value, say 250, then that can be serialized as `[250,null]`
    OrganizationOwner:
      properties:
        nationalIdentificationNumber:
          $ref: '#/components/schemas/NationalIdentificationNumber'
        givenName:
          $ref: '#/components/schemas/GivenName'
        additionalName:
          $ref: '#/components/schemas/AdditionalName'
        familyName:
          $ref: '#/components/schemas/FamilyName'
        ownerShipPercent:
          type: number
          example: 75
          description: Ownership in percent.
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        placeOfBirth:
          $ref: '#/components/schemas/PlaceOfBirth'
    PhoneNumber:
      type: string
      example: '+4688675309'
      description: |
        The phone number. Note that the phone number might not be sent as a number, see [E.161](https://en.wikipedia.org/wiki/E.161).  We prefer [E.164](https://en.wikipedia.org/wiki/E.164).
    PlaceOfBirth:
      type: string
      example: Stockholm
      description: Place of birth.
    PoliticallyExposedPerson:
      type: boolean
      example: false
      description: '"politically exposed person" (PEP) is a term describing someone who has been entrusted with a prominent public function. A PEP generally presents a higher risk for potential involvement in bribery and corruption by virtue of their position and the influence that they may hold.'
    PrivacyPolicyAccepted:
      type: boolean
      example: false
      description: True when the applicant has accepted Qred privacy policy.
    PromoCode:
      type: string
      example: SOMECAMPAIGN123
      description: Promo code used to give the customer a discount or extra benefits.
    PurposeOfLoan:
      type: string
      example: I need to increase liquidity due to upcoming costs associated with participation in branch conference
      description: Company explains why they need the business loan
    SimpleApplicant:
      required:
        - email
        - $type
      properties:
        email:
          type: string
          format: email
          example: joe.smith@a-company.com
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        nationalIdentificationNumber:
          $ref: '#/components/schemas/NationalIdentificationNumber'
        givenName:
          $ref: '#/components/schemas/GivenName'
        additionalName:
          $ref: '#/components/schemas/AdditionalName'
        familyName:
          $ref: '#/components/schemas/FamilyName'
        privacyPolicyAccepted:
          $ref: '#/components/schemas/PrivacyPolicyAccepted'
        $type:
          type: string
          example: simple
          description: Note that `$type` must be `full` in order to send in further information.
    SimpleOrganization:
      required:
        - nationalOrganizationNumber
        - $type
      properties:
        nationalOrganizationNumber:
          type: string
          example: '2344473928'
          description: |
            The national organization number is the "number" used to identify organizations in a country. In Sweden that would be [organization number](https://bolagsverket.se/en). In Denmark you have [CVR-number](https://datacvr.virk.dk/data/?language=en-gb). In Finland it is the [Business ID](https://www.ytj.fi/en/index/businessid.html). In the Netherlands it is [KVK number](https://www.kvk.nl/english/)
            ### Why not VAT ID?
            Note that a company can in some cases have many VAT numbers. 
            ### What about DUNS, LEI codes, et.c. ?
            We only expect the national organization number, not the more international numbers (since not all companies in a country has an international id).
        email:
          type: string
          format: email
          example: invoice@a-company.com
          description: Company email
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        url:
          type: string
          format: uri
          example: 'http://www.a-company.com'
          description: Url to the organization site.
        currentMonthlyTurnover:
          $ref: '#/components/schemas/CurrentMonthlyTurnover'
        $type:
          type: string
          example: simple
          description: Note that `$type` must be `full` in order to send in further information.
  securitySchemes:
    JWT:
      description: |
        When you sign up for an account, you are given your first API client id and secret API key. Using these you can then
        connect to our identity provider to get a [JWT](https://jwt.io) issued.
      type: http
      scheme: bearer
      bearerFormat: JWT
