{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "api.qred.com",
  "basePath": "/loans/v1",
  "info": {
    "description": "Qred Connect - API Documentation\n# Introduction\nQred's Partner API \"Qred Connect\" allows our partners to directly connect to Qred's services. As a partner you may submit an application and request instant approval for a business loan. Our API allows our partners to integrate Qred's business loan application in a seamless and effortless way.\n# Technical Specifications\nNotice that for Qred Connect:\n\n  * Qred's APIs are built according to industry standard practices for third-party RESTful web services\n  * Strong validation, authentication & encryption\n  * Entry points for requests are sent via HTTP over SSL (all information is encrypted)\n\n# How to get started\nThere are two environments - Test and Production.\n\n  * Test: https://test.qred.com/api\n  * Production: https://connect.qred.com/api\n",
    "version": "0.1.1",
    "title": "Qred Connect",
    "termsOfService": "https://connect.qred.com/terms/",
    "contact": {
      "email": "techsupport@qred.com",
      "url": "https://connect.qred.com/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://qred.com/img/qred-logo-mobile-green.png"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "api_key"
    }
  },
  "tags": [
    {
      "name": "applications",
      "description": "Create loan applications on behalf of your customers"
    },
    {
      "name": "full applications",
      "description": "Create loan applications with a full set of fields available for advanced users of the Qred API"
    }
  ],
  "paths": {
    "/applications": {
      "post": {
        "tags": [
          "applications"
        ],
        "summary": "Add loan application",
        "operationId": "addApplication",
        "description": "Send a loan application to Qred",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "Application to add",
            "schema": {
              "$ref": "#/definitions/ApplicationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created",
            "schema": {
              "$ref": "#/definitions/ApplicationCreateResponse"
            }
          },
          "400": {
            "description": "invalid input, object invalid",
            "schema": {
              "$ref": "#/definitions/ApplicationErrorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "using Newtonsoft.Json;\nusing System.Net.Http;\nusing System.Threading.Tasks;\nusing System.Text;\nusing System;\n\nnamespace AwesomeBusinessApp\n{\n  public class CreatedLoanApplication\n  {\n    public string Id { get; set; }\n    public Uri Url { get; set; }\n  }\n\n  public class ConnectToQred\n  {\n    HttpClient client = new HttpClient(); // note: You might not want to do this but inject client through dependency injection\n    public async Task<CreatedLoanApplication> Connect()\n    {\n      var payload = new {\n          Amount=5000,\n          Currency=\"SEK\",\n          Organization=new {VatIdentificationNumber=\"SE2344473928\"},\n          Applicant=new{Email=\"joe.smith@a-company.com\", Phone=\"408-867-5309\"}\n      };\n      var result = await client.PostAsync(\"https://api.qred.com/loans/v1/applications\", new StringContent(JsonConvert.SerializeObject(payload), Encoding.UTF8, \"application/json\"));\n      result.EnsureSuccessStatusCode();\n\n      return JsonConvert.DeserializeObject<CreatedLoanApplication>(await result.Content.ReadAsStringAsync());\n    } \n  }\n}\n\n\n"
          }
        ]
      }
    },
    "/applications/": {
      "post": {
        "tags": [
          "full applications"
        ],
        "summary": "Add a full loan application with advanced fields",
        "operationId": "addFullApplication",
        "description": "Send a loan application to Qred. This part of the API gives you the ability to send in further fields to simplify the qualification of the of the customer application.\n### Restricted usage\nNote however that this API will not be available for all users of the Qred Connect API. You can sign up for it by contacting Qred.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "Application to add",
            "schema": {
              "$ref": "#/definitions/FullApplicationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created",
            "schema": {
              "$ref": "#/definitions/ApplicationCreateResponse"
            }
          },
          "400": {
            "description": "invalid input, object invalid",
            "schema": {
              "$ref": "#/definitions/ApplicationErrorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/applications/{applicationid}": {
      "get": {
        "summary": "Status of loan application",
        "description": "Get summary information about loan application from Qred",
        "tags": [
          "applications"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The id of the application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found application with id",
            "schema": {
              "$ref": "#/definitions/ApplicationDecisionApproved"
            }
          },
          "210": {
            "description": "Found application with id",
            "schema": {
              "$ref": "#/definitions/ApplicationDecisionManualProcess"
            }
          },
          "211": {
            "description": "Found application with id",
            "schema": {
              "$ref": "#/definitions/ApplicationDecisionRejected"
            }
          },
          "404": {
            "description": "Application not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AdditionalName": {
      "type": "string",
      "example": "Daniels",
      "description": "An additional name for a Person, can be used for a middle name."
    },
    "ApplicationApplicant": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "joe.smith@a-company.com"
        },
        "phone": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "nationalIdentificationNumber": {
          "$ref": "#/definitions/NationalIdentificationNumber"
        },
        "givenName": {
          "$ref": "#/definitions/GivenName"
        },
        "additionalName": {
          "$ref": "#/definitions/AdditionalName"
        },
        "familyName": {
          "$ref": "#/definitions/FamilyName"
        }
      }
    },
    "ApplicationCreateResponse": {
      "properties": {
        "id": {
          "type": "string",
          "example": "APP-32444"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "https://api.qred.com/loans/v1/applications/APP-32444"
        }
      }
    },
    "ApplicationDecision": {
      "required": [
        "decision"
      ],
      "properties": {
        "decision": {
          "$ref": "#/definitions/ApplicationDecisionType"
        }
      }
    },
    "ApplicationDecisionApproved": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationDecision"
        },
        {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "term": {
              "type": "number"
            },
            "campaign": {
              "type": "string"
            },
            "offerUrl": {
              "type": "string",
              "format": "uri",
              "description": "Url for the user to see and accept the offer given by Qred"
            }
          }
        }
      ],
      "example": {
        "type": "Approved",
        "amount": 5000,
        "term": 12,
        "campaign": "Spring Campaign",
        "offerUrl": "https://qred.com/link-to-offer?id=offer-id"
      }
    },
    "ApplicationDecisionManualProcess": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationDecision"
        }
      ],
      "example": {
        "type": "ManualProcess"
      }
    },
    "ApplicationDecisionRejected": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationDecision"
        },
        {
          "type": "object",
          "properties": {
            "rejectReason": {
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "type": "Denied",
        "rejectReason": "Due to previous problems with payments we regret that we have to reject the application."
      }
    },
    "ApplicationDecisionType": {
      "type": "string",
      "example": "Approved",
      "enum": [
        "Approved",
        "Denied",
        "ManualProcess"
      ]
    },
    "ApplicationErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationErrorResponseItem"
          }
        }
      },
      "example": {
        "errors": [
          {
            "property": "amount",
            "description": "Amount is a required field"
          },
          {
            "property": "organization.organizationId",
            "description": "organizationId is a required field"
          },
          {
            "property": "applicant.email",
            "description": "email is a required field"
          }
        ]
      }
    },
    "ApplicationErrorResponseItem": {
      "properties": {
        "property": {
          "type": "string",
          "example": "amount"
        },
        "description": {
          "type": "string",
          "example": "Amount is a required field"
        }
      }
    },
    "ApplicationOrganization": {
      "required": [
        "vatIdentificationNumber"
      ],
      "properties": {
        "vatIdentificationNumber": {
          "type": "string",
          "example": "SE2344473928",
          "description": "The VAT identifier is used to identify organizations in various countries. In Sweden that would be a prefixed organization number. In Denmark you have prefixed CVR-number.  See [VAT identification number](https://en.wikipedia.org/wiki/VAT_identification_number) for more information.\n"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "invoice@a-company.com",
          "description": "Company email"
        },
        "phone": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "example": "http://www.a-company.com",
          "description": "Url to the organization site."
        }
      }
    },
    "ApplicationPoliticallyExposedPerson": {
      "properties": {
        "nationalIdentificationNumber": {
          "$ref": "#/definitions/NationalIdentificationNumber"
        },
        "givenName": {
          "$ref": "#/definitions/GivenName"
        },
        "additionalName": {
          "$ref": "#/definitions/AdditionalName"
        },
        "familyName": {
          "$ref": "#/definitions/FamilyName"
        },
        "dateOfBirth": {
          "$ref": "#/definitions/DateOfBirth"
        },
        "placeOfBirth": {
          "$ref": "#/definitions/PlaceOfBirth"
        },
        "description": {
          "type": "string",
          "example": "Member of the parliament",
          "description": "How is the person politically exposed."
        }
      }
    },
    "ApplicationRequest": {
      "required": [
        "amount",
        "currency",
        "organization",
        "applicant"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "example": 15000,
          "description": "The amount in local currency that the company wants to borrow."
        },
        "currency": {
          "type": "string",
          "example": "SEK",
          "description": "We expect to receive the currency in [ISO 4217 currency format](https://en.wikipedia.org/wiki/ISO_4217)"
        },
        "promoCode": {
          "type": "string",
          "example": "SOMECAMPAIGN123",
          "description": "Promo code used to give the customer a discount or extra benefits."
        },
        "term": {
          "type": "number",
          "example": 12,
          "description": "Loan term number of months"
        },
        "purposeOfLoan": {
          "type": "string",
          "example": "I need to increase liquidity due to upcoming costs associated with participation in branch conference",
          "description": "Company explains why they need the business loan"
        },
        "organization": {
          "$ref": "#/definitions/ApplicationOrganization"
        },
        "applicant": {
          "$ref": "#/definitions/ApplicationApplicant"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadBase64File"
          },
          "description": "Here you can supply additional files such as images, pdfs or company specify formats in order to get a faster qualification for your customer."
        }
      }
    },
    "DateOfBirth": {
      "type": "string",
      "example": "19701201",
      "description": "When the person was born. Expected format is `YYYYMMDD`"
    },
    "FamilyName": {
      "type": "string",
      "example": "Smith",
      "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property."
    },
    "FullApplicationApplicant": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationApplicant"
        },
        {
          "type": "object",
          "properties": {
            "politicallyExposedPerson": {
              "$ref": "#/definitions/PoliticallyExposedPerson"
            },
            "dateOfBirth": {
              "$ref": "#/definitions/DateOfBirth"
            },
            "placeOfBirth": {
              "$ref": "#/definitions/PlaceOfBirth"
            }
          }
        }
      ]
    },
    "FullApplicationOrganization": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationOrganization"
        },
        {
          "type": "object",
          "properties": {
            "numberOfEmployees": {
              "type": "number",
              "example": 5,
              "description": "Number of full time employees."
            },
            "currentMonthlyTurnover": {
              "type": "string",
              "example": 100000,
              "description": "Turnover for last month in national currency. Expected to be the full amount, i.e. 1 000 000 SEK implies 1 million SEK."
            },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationOwner"
              }
            },
            "iban": {
              "type": "string",
              "example": "DE89 3704 0044 0532 0130 00",
              "description": "International Bank Account Number. The company bank account for receiving out payment. \n"
            }
          }
        }
      ]
    },
    "FullApplicationRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationRequest"
        },
        {
          "type": "object",
          "properties": {
            "politicallyExposedPersons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationPoliticallyExposedPerson"
              }
            },
            "organization": {
              "$ref": "#/definitions/FullApplicationOrganization"
            },
            "applicant": {
              "$ref": "#/definitions/FullApplicationApplicant"
            }
          }
        }
      ]
    },
    "GivenName": {
      "type": "string",
      "example": "Joe",
      "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property."
    },
    "NationalIdentificationNumber": {
      "type": "string",
      "example": "197012012344",
      "description": "### Short explanation\nThe Tax / Fiscal ID of the person, e.g. the TIN in the US or the CIF/NIF in Spain.  For Denmark that would be CPR. For Sweden it would be personal number.\n### Longer explanation\nThe value does not need to be a number. For some countries it's a string. However, since the accepted name on wikipedia is national identification number, we accept the inconsistancy. For further information see [wikipedia](https://en.wikipedia.org/wiki/National_identification_number).\n"
    },
    "OrganizationOwner": {
      "properties": {
        "nationalIdentificationNumber": {
          "$ref": "#/definitions/NationalIdentificationNumber"
        },
        "givenName": {
          "$ref": "#/definitions/GivenName"
        },
        "additionalName": {
          "$ref": "#/definitions/AdditionalName"
        },
        "familyName": {
          "$ref": "#/definitions/FamilyName"
        },
        "ownerShipPercent": {
          "type": "number",
          "example": 75,
          "description": "Ownership in percent."
        },
        "dateOfBirth": {
          "$ref": "#/definitions/DateOfBirth"
        },
        "placeOfBirth": {
          "$ref": "#/definitions/PlaceOfBirth"
        }
      }
    },
    "PhoneNumber": {
      "type": "string",
      "example": "+4688675309",
      "description": "The phone number. Note that the phone number might not be sent as a number, see [E.161](https://en.wikipedia.org/wiki/E.161).  We prefer [E.164](https://en.wikipedia.org/wiki/E.164).\n"
    },
    "PlaceOfBirth": {
      "type": "string",
      "example": "Stockholm",
      "description": "Place of birth."
    },
    "PoliticallyExposedPerson": {
      "type": "boolean",
      "example": false,
      "description": "\"politically exposed person\" (PEP) is a term describing someone who has been entrusted with a prominent public function. A PEP generally presents a higher risk for potential involvement in bribery and corruption by virtue of their position and the influence that they may hold."
    },
    "UploadBase64File": {
      "required": [
        "filename",
        "base64Content"
      ],
      "properties": {
        "encodingFormat": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "application/xml",
            "https//api.a-company.com/transactions/v1"
          ],
          "description": "Media type typically expressed using a MIME format (see [IANA](http://www.iana.org/assignments/media-types/media-types.xhtml) site and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. In the case of organization specific file format with a specific purpose that could be a url to schema definition. For instance, transaction data format defined by `a-company` (see the example) that may or may not be hosted at that url."
        },
        "filename": {
          "type": "string",
          "example": "company-specific-format.xml"
        },
        "base64Content": {
          "type": "string",
          "format": "byte",
          "example": "U3dhZ2dlciByb2Nrcw==",
          "description": "Base64 encoded binary content."
        }
      }
    }
  }
}
